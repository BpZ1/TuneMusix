<Page x:Class="TuneMusix.View.PlaylistPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:vm="clr-namespace:TuneMusix.ViewModel"
      xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
      xmlns:controls="clr-namespace:TuneMusix.View.Controls"
      mc:Ignorable="d" 
      d:DesignHeight="624" d:DesignWidth="510.73"
      Title="PlaylistPage"
      DataContext="{DynamicResource PlaylistViewModel}"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      Background="{DynamicResource MaterialDesignPaper}"
      FontFamily="{DynamicResource MaterialDesignFont}"    
      >
    <Page.Resources>
        <vm:PlaylistViewModel x:Key="PlaylistViewModel"/>
        <DataTemplate x:Key="PlaylistDragAdorner">
            <StackPanel>
                <materialDesign:PackIcon Kind="PlaylistPlus" />
                <TextBlock Text="{Binding Name}" HorizontalAlignment="Center"/>
            </StackPanel>
        </DataTemplate>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Page.Resources>
    <DockPanel x:Name="CurrentPlaylistField">
        <materialDesign:DialogHost Grid.Column="1" Grid.Row="1" Identifier="DialogHost">
            <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            MinWidth="256" MinHeight="256" ClipToBounds="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <materialDesign:ColorZone Mode="PrimaryMid" Grid.Row="0" >
                        <TextBlock Margin="16" Text="Playlists" FontWeight="DemiBold" FontSize="18" FontFamily="Segoe UI"/>
                    </materialDesign:ColorZone>
                    <ListView Name="PlaylistListView" ScrollViewer.CanContentScroll="False" Grid.Row="1" ItemsSource="{Binding Playlists,UpdateSourceTrigger=PropertyChanged}" 
                             dd:DragDrop.IsDragSource="True" dd:DragDrop.DragAdornerTemplate="{StaticResource PlaylistDragAdorner}"
                             dd:DragDrop.IsDropTarget="True" dd:DragDrop.DragHandler="{Binding}" 
                             SelectionMode="Single" SelectedItem="{Binding SelectedPlaylist}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SelectionChanged}" CommandParameter="{Binding Path=SelectedItem, ElementName=PlaylistListView}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding SetPlaylistCurrent}">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon  Kind="Play" Margin="0,0,5,0"/>
                                            <TextBlock Text="Play"/>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding RenamePlaylistDialog}">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon  Kind="Pencil" Margin="0,0,5,0"/>
                                            <TextBlock Text="Rename"/>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding DeletePlaylist}">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon  Kind="Delete" Margin="0,0,5,0"/>
                                            <TextBlock Text="Delete"/>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <DockPanel LastChildFill="True">
                                    <controls:PlaylistItem DockPanel.Dock="Left" Width="Auto">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListView}}, Path=DataContext.SetPlaylistCurrent}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </controls:PlaylistItem>
                                </DockPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                    </ListView>

                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"                                
                                    Command="{Binding OpenDialog}"
                                    VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                                    Grid.Row="0" Margin="0 0 28 -20">
                        <Viewbox Width="22" Height="22">
                            <materialDesign:PackIcon Kind="Plus" />
                        </Viewbox>
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"                                
                                    Command="{Binding OpenDialog}" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}"
                                    VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                                    Grid.Row="0" Margin="0 0 28 -20" Visibility="{Binding Path=IsDragging, Converter={StaticResource BoolToVis}}">
                        <Viewbox Width="22" Height="22">
                            <materialDesign:PackIcon Kind="Delete" />
                        </Viewbox>
                    </Button>
                </Grid>
            </Border>
        </materialDesign:DialogHost>
    </DockPanel>
</Page>
