<Page x:Class="TuneMusix.View.MusicPlayerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:control="clr-namespace:TuneMusix.Controls"
      xmlns:vm="clr-namespace:TuneMusix.ViewModel"
      xmlns:local="clr-namespace:TuneMusix.View"
      mc:Ignorable="d" 
      d:DesignHeight="80" d:DesignWidth="800"
      Title="MusicPlayerPage" 
      DataContext="{DynamicResource MusicPlayerViewModel}"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="13"
      TextOptions.TextFormattingMode="Ideal"
      TextOptions.TextRenderingMode="Auto"
      Background="{DynamicResource MaterialDesignPaper}"
      FontFamily="{DynamicResource MaterialDesignFont}"
      >
    <Page.Resources>
        <vm:MusicPlayerViewModel x:Key="MusicPlayerViewModel"/>
        <Style TargetType="{x:Type control:FormattedSlider}" BasedOn="{StaticResource MaterialDesignSlider}"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" x:Name="AudioControls">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" x:Name="BackButton" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding PreviousTrack}">
                        <materialDesign:PackIcon Kind="SkipPreviousCircleOutline" RenderTransformOrigin="0.5,0.5" >
                            <materialDesign:PackIcon.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </materialDesign:PackIcon.RenderTransform>
                        </materialDesign:PackIcon>
                    </Button>
                    <Button Grid.Column="1" x:Name="PlayButton" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding PlayButton}">
                        <materialDesign:PackIcon Kind="{Binding PlayButtonIcon,UpdateSourceTrigger=PropertyChanged}" RenderTransformOrigin="0.5,0.5" >
                            <materialDesign:PackIcon.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </materialDesign:PackIcon.RenderTransform>
                        </materialDesign:PackIcon>
                    </Button>
                    <Button Grid.Column="2" x:Name="ForwardButton" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding NextTrack}">
                        <materialDesign:PackIcon Kind="SkipNextCircleOutline" RenderTransformOrigin="0.5,0.5" >
                            <materialDesign:PackIcon.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </materialDesign:PackIcon.RenderTransform>
                        </materialDesign:PackIcon>
                    </Button>
                    <StackPanel Grid.Column="3" Orientation="Horizontal">
                        <Button x:Name="MuteButton" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding VolumeButton}" 
                                ToolTipService.ShowDuration="30000" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding OpenVolumePopup}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeave">
                                    <i:InvokeCommandAction Command="{Binding CloseVolumePopup}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <materialDesign:PackIcon Kind="{Binding VolumeButtonIcon,UpdateSourceTrigger=PropertyChanged}"
                                                     HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
                                <materialDesign:PackIcon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="2" ScaleY="2"/>
                                    </TransformGroup>
                                </materialDesign:PackIcon.RenderTransform>
                            </materialDesign:PackIcon>
                        </Button>
                        <!-- Popup for the volume slider -->
                            <Slider DockPanel.Dock="Top"  x:Name="VolumeSlider" Value="{Binding Volume,Mode=TwoWay}" Orientation="Horizontal" AutoToolTipPlacement="BottomRight"
                                    ToolTipService.ShowDuration="30000" Maximum="100" IsSelectionRangeEnabled="True" Margin="3,0" Width="80"
                                    Visibility="{Binding VolumeSliderVisible,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}" 
                                    VerticalAlignment="Center" IsMoveToPointEnabled="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding VolumeButtonReleased}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:InvokeCommandAction Command="{Binding OpenVolumePopup}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:InvokeCommandAction Command="{Binding CloseVolumePopup}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Slider>
                            <Button Grid.Column="2" x:Name="RepeatButton" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding RepeatButton}">
                            <materialDesign:PackIcon Kind="{Binding RepeatButtonIcon,UpdateSourceTrigger=PropertyChanged}" RenderTransformOrigin="0.5,0.5" >
                                <materialDesign:PackIcon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="2" ScaleY="2"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </materialDesign:PackIcon.RenderTransform>
                            </materialDesign:PackIcon>
                        </Button>
                        <Button Grid.Column="2" x:Name="ShuffleButton" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding ShuffleButton}">
                            <materialDesign:PackIcon Kind="{Binding ShuffleButtonIcon,UpdateSourceTrigger=PropertyChanged}" RenderTransformOrigin="0.5,0.5" >
                                <materialDesign:PackIcon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="2" ScaleY="2"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </materialDesign:PackIcon.RenderTransform>
                            </materialDesign:PackIcon>
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding SliderDraggingOff}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding SliderDraggingOn}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <control:FormattedSlider x:Name="PositionSlider" Value="{Binding CurrentSliderPosition,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"  AutoToolTipPlacement="BottomRight" 
                                         Minimum="0" Maximum="{Binding Length,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding TrackLoaded,UpdateSourceTrigger=PropertyChanged}"
                                         Margin="20,0,20,8" IsTimeValue="True" ToolTip="{Binding SliderPostionString, UpdateSourceTrigger=PropertyChanged}" ToolTipService.Placement="Mouse"
                                         IsMoveToPointEnabled="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding PositionSlider_MouseUp}" CommandParameter="{Binding ElementName=PositionSlider}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding PositionSlider_MouseDown}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </control:FormattedSlider>
                </Grid>
            </StackPanel>
        </Grid>

        <Grid x:Name="TrackInfo" Grid.Column="1" RenderTransformOrigin="0.5,0.5">
            <StackPanel>
                <Label Content="{Binding CurrentTrackName,UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" Background="{x:Null}" FontSize="16" FontFamily="Segoe WP Black" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Label Content="{Binding CurrentPlaylistName,UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold"
                       FontSize="16" FontFamily="Segoe WP Black" Background="{x:Null}" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>
    </Grid>
</Page>
