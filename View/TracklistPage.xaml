<Page x:Class="TuneMusix.View.TracklistPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:vm="clr-namespace:TuneMusix.ViewModel"
      mc:Ignorable="d" 
      d:DesignHeight="623" d:DesignWidth="1195"
      Title="TracklistPage"
      DataContext="{DynamicResource TracklistViewModel}"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="13"
      TextOptions.TextFormattingMode="Ideal"
      TextOptions.TextRenderingMode="Auto"
      Background="{DynamicResource MaterialDesignPaper}"
      FontFamily="{DynamicResource MaterialDesignFont}"   
      >
    <Page.Resources>
        <vm:TracklistViewModel x:Key="TracklistViewModel"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Page.Resources>
    <DockPanel Background="Transparent">
        <materialDesign:ColorZone Mode="PrimaryLight" DockPanel.Dock="Top">
            <StackPanel Orientation="Horizontal">
                <TextBox Width="400" Margin="10,2,0,2" HorizontalAlignment="Left" Text="{Binding SearchBoxText,UpdateSourceTrigger=PropertyChanged}" x:Name="searchBox">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding SearchChanged}" CommandParameter="{Binding Text, ElementName=searchBox}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding DeleteSearch}" x:Name="SeachDeleteButton">
                    <materialDesign:PackIcon Kind="CloseCircleOutline" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <materialDesign:PackIcon.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </materialDesign:PackIcon.RenderTransform>
                    </materialDesign:PackIcon>
                </Button>
                <TextBlock x:Name="TotalPlaytime" Text="{Binding TrackDurationSum, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" FontWeight="Bold" FontSize="13.333" VerticalAlignment="Center" Width="161"/>
            </StackPanel>
        </materialDesign:ColorZone>
        <ListView Name="AllTrackList" ItemsSource="{Binding FilteredTracks, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.VerticalScrollBarVisibility="Auto"
              Margin="10" DockPanel.Dock="Top" MouseDoubleClick="ListView_MouseDoubleClick">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChanged}" CommandParameter="{Binding ElementName=AllTrackList}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{Binding SelectedItemsText,UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"/>
                    <MenuItem Command="{Binding PlayTrack}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon  Kind="Play" Margin="0,0,5,0"/>
                                <TextBlock Text="Play"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Command="{Binding AddTracksToQueue}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon  Kind="PlaylistPlus" Margin="0,0,5,0"/>
                                <TextBlock Text="Add to queue"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Command="{Binding OpenNewPlaylistDialog}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon  Kind="Plus" Margin="0,0,5,0"/>
                                <TextBlock Text="Add new playlist"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem ItemsSource="{Binding Playlists}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon  Kind="PlaylistPlus" Margin="0,0,5,0"/>
                                <TextBlock Text="Add to playlist"/>
                            </StackPanel>
                        </MenuItem.Header>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                                <Setter Property="Header" Value="{Binding Name}"/>
                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuItem}, Path=DataContext.AddToPlaylist}" />
                                <Setter Property="CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Command="{Binding DeleteSelectedTracks}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon  Kind="Delete" Margin="0,0,5,0"/>
                                <TextBlock Text="Delete"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView x:Name="TrackElements" AllowsColumnReorder="true"  ColumnHeaderToolTip="Track Information">
                    <GridViewColumn x:Name="TitleColumn" DisplayMemberBinding="{Binding Path=Title.Value, UpdateSourceTrigger=PropertyChanged}" Width="300" >
                        <GridViewColumnHeader>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding ColumnClicked}" CommandParameter="TitleColumn"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <StackPanel Orientation="Horizontal" x:Name="TitleColumnHeader">
                                <TextBlock Text="Title" VerticalAlignment="Center" Margin="5,0,10,0"></TextBlock>
                                <materialDesign:PackIcon Kind="{Binding SortingIcon,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding TitleSorted, Converter={StaticResource BoolToVis}}"/>
                            </StackPanel>
                        </GridViewColumnHeader>
                    </GridViewColumn>
                    <!--      Interpret column         -->
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Interpret.Value, UpdateSourceTrigger=PropertyChanged}" Width="200">
                        <GridViewColumnHeader>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding ColumnClicked}" CommandParameter="InterpretColumn"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <StackPanel Orientation="Horizontal" x:Name="InterpretColumnHeader">
                                <TextBlock Text="Interpret" VerticalAlignment="Center" Margin="5,0,10,0"></TextBlock>
                                <materialDesign:PackIcon Kind="{Binding SortingIcon,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding InterpretSorted, Converter={StaticResource BoolToVis}}"/>
                            </StackPanel>
                        </GridViewColumnHeader>
                    </GridViewColumn>
                    <!--      Album column         -->
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Album.Value, UpdateSourceTrigger=PropertyChanged}" Width="200">
                        <GridViewColumnHeader>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding ColumnClicked}" CommandParameter="AlbumColumn"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <StackPanel Orientation="Horizontal" x:Name="AlbumColumnHeader">
                                <TextBlock Text="Album" VerticalAlignment="Center" Margin="5,0,10,0"></TextBlock>
                                <materialDesign:PackIcon Kind="{Binding SortingIcon,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding AlbumSorted, Converter={StaticResource BoolToVis}}"/>
                            </StackPanel>
                        </GridViewColumnHeader>
                    </GridViewColumn>
                    <!--      Year column         -->
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Year.Value, UpdateSourceTrigger=PropertyChanged}" Width="100">
                        <GridViewColumnHeader>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding ColumnClicked}" CommandParameter="YearColumn"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <StackPanel Orientation="Horizontal" x:Name="YearColumnHeader">
                                <TextBlock Text="Year" VerticalAlignment="Center" Margin="5,0,10,0"></TextBlock>
                                <materialDesign:PackIcon Kind="{Binding SortingIcon,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding YearSorted, Converter={StaticResource BoolToVis}}"/>
                            </StackPanel>
                        </GridViewColumnHeader>
                    </GridViewColumn>
                    <!--      Genre column         -->
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Genre.Value, UpdateSourceTrigger=PropertyChanged}" Width="150">
                        <GridViewColumnHeader>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding ColumnClicked}" CommandParameter="GenreColumn"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <StackPanel Orientation="Horizontal" x:Name="GenreColumnHeader">
                                <TextBlock Text="Genre" VerticalAlignment="Center" Margin="5,0,10,0"></TextBlock>
                                <materialDesign:PackIcon Kind="{Binding SortingIcon,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding GenreSorted, Converter={StaticResource BoolToVis}}"/>
                            </StackPanel>
                        </GridViewColumnHeader>
                    </GridViewColumn>
                    <!--      Duration column         -->
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Duration, UpdateSourceTrigger=PropertyChanged}" Width="150">
                        <GridViewColumnHeader>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding ColumnClicked}" CommandParameter="DurationColumn"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <StackPanel Orientation="Horizontal" x:Name="DurationColumnHeader">
                                <TextBlock Text="Duration" VerticalAlignment="Center" Margin="5,0,10,0"></TextBlock>
                                <materialDesign:PackIcon Kind="{Binding SortingIcon,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding DurationSorted, Converter={StaticResource BoolToVis}}"/>
                            </StackPanel>
                        </GridViewColumnHeader>
                    </GridViewColumn>
                    <GridViewColumn Width="250">
                        <GridViewColumnHeader>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding ColumnClicked}" CommandParameter="RatingColumn"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <StackPanel Orientation="Horizontal" x:Name="RatingColumnHeader">
                                <TextBlock Text="Rating" VerticalAlignment="Center" Margin="5,0,10,0"></TextBlock>
                                <materialDesign:PackIcon Kind="{Binding SortingIcon,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding RatingSorted, Converter={StaticResource BoolToVis}}"/>
                            </StackPanel>
                        </GridViewColumnHeader>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:RatingBar Value="{Binding Rating.Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Orientation="Horizontal" Foreground="Gold" Margin="0" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </DockPanel>
</Page>
